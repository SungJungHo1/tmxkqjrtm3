import { NextPage } from 'next'
import Head from 'next/head'
import { useRef, useState, useEffect } from 'react'
import { useForm } from 'react-hook-form'
import Toast from '@/components/toast'
import axios from 'axios'
import type { Liff } from "@line/liff";
import { useRouter } from 'next/router'
import Image from 'next/image'
import { insertCommas } from '@/libs/utils'
import swal from 'sweetalert2'

type UnPromise<T> = T extends Promise<infer X> ? X : T;

const Order: NextPage = () => {
  const [ColorState, setColorState] = useState("")
  const [toastVisible, setToastVisible] = useState(false)
  const [OnHidden, setOnHidden] = useState(true)
  const [SummitClicked, setSummitClicked] = useState(false)
  const [bankName, setbankName] = useState("ÌïòÎÇò")
  const [User_Point, setUser_Point] = useState(0)
  const [errorMessage, setErrorMessage] = useState<string>('')
  const [userId, setuserId] = useState<string>('')
  const [userName, setuserName] = useState<string>('')

  const [liffObject, setLiffObject] = useState<Liff | null>(null);

  useEffect(() => {
    let liff_ID = "1657404178-OkbrA8Ae"
    // to avoid `window is not defined` error
    async function liffLogin() {
      const liff = (await import('@line/liff')).default;
      try {
        await liff.init({ liffId: liff_ID }).then(() => {
          // console.log("LIFF init succeeded.");
          setLiffObject(liff);
        })
      } catch (err) {
        console.error('liff init error', err.message);
      }
    }
    liffLogin();

  }, []);

  useEffect(() => {
    if (liffObject !== null) {
      liffObject.ready.then(async () => {
        const liffprofile: UnPromise<ReturnType<typeof liffObject.getProfile>> = await liffObject.getProfile();
        setuserId(liffprofile.userId)
        setuserName(liffprofile.displayName)
        await axios
        .get(`https://www.fastfood.p-e.kr/find_User_Data2?User_ID=${encodeURIComponent(liffprofile.userId)}`, {//
        }).then((res) => {
            if (res.data){
                setUser_Point(Number(res.data.Point))
            }
          }
        );
      })
    }
  }, [liffObject])

  useEffect(() => {
    if (liffObject !== null) {
      
    }
  }, [liffObject])

  const { register, handleSubmit } = useForm()
  const router = useRouter()
  const formRef = useRef()

  const onSubmit = async (data) => {
    // Îëò Îã§ ÏûÖÎ†•Ïù¥ ÏïàÎêòÏñ¥ÏûàÏùÑ Îïå ÏóêÎü¨
    if (SummitClicked) {
      return
    }
    if (User_Point < 10000){
      swal.fire("‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 10,000 ‡∏ß‡∏≠‡∏ô")
      return
    }
    setSummitClicked(true)
    console.log(data)
    if (!(data.Name && data.accountName)) {
      setErrorMessage('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ñ‡πà‡∏∞')
      setSummitClicked(false)
      setToastVisible(true)
      setColorState("")
      return
    }

    setOnHidden(!OnHidden)
    setErrorMessage("‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡∏Ñ‡πà‡∏∞.")
    setToastVisible(true)
    setColorState("success")
    const On_User = sessionStorage.getItem("On_User")
    let new_Cus = false
    if (On_User === "On"){
      new_Cus = false
    }
    else{
      new_Cus = true
    }
    
    await axios //"Ua80cd1a19a12cb88657950e300a68594"
      .post(`https://www.fastfood.p-e.kr/refund`, {
      // .post(`http://localhost/refund`, {
        'UserName':userId,
        'UserId':userName,
        'Name':data.Name,
        'BankName':bankName,
        'accountName':data.accountName,
        "Refund_Point":User_Point
      })
      .then((res) => {
        
        swal.fire({
          title: '‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏´‡∏≤‡∏Å‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏à‡∏∞‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡∏Ñ‡πà‡∏∞.',
          confirmButtonText: 'Ok',
        }).then((result) => {
          /* Read more about isConfirmed, isDenied below */
            liffObject.closeWindow()
        })
      })
      
  }

  const isOpened = (opened) => {
    if (!opened) {
      setToastVisible(false)
    }
  }

  const handleChange = (e) => {
      setbankName(e.target.value)
  }
  return (
    <form ref={formRef} onSubmit={handleSubmit(onSubmit)}>
      <Head>
        <title>‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</title>
      </Head>
      <Toast message={errorMessage} open={toastVisible} onOpen={isOpened} delay={3000} color={ColorState} />

      <div className="flex h-screen flex-col">
        {!OnHidden ? <div className="absolute z-10 flex h-full w-full flex-col justify-center bg-black/70 px-2 text-center text-xs text-white">
          <p style={{ fontSize: '30px', lineHeight: '150%', fontFamily: "Sriracha-Regular" }}>{'‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ ‡πÇ‡∏õ‡∏£‡∏î‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô'}</p>
          <Image src="/images/Inter.svg" alt="home" width={300} height={300} unoptimized/>
        </div> : null}
        <div className="flex-1 space-y-5 overflow-auto p-5">
          {/* <div id="map" ref={mapElement} style={{ width: '100 %', height: '200px' }} hidden={!OnHidden}></div>
           */}
          
          <div className="text-lg font-bold" style={{ fontFamily: "Sriracha-Regular" }}>
            {/*ÌôòÎ∂àÏ†ïÎ≥¥*/}
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
          </div>
          <div className="text-lg font-bold" style={{ fontFamily: "Sriracha-Regular" }}>
            {/*ÌôòÎ∂àÏ†ïÎ≥¥*/}
            <br/>
            ‡∏à‡∏∏‡∏î‡πÅ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏ô‡∏≤‡∏Ñ‡∏∏‡∏ì <p className="text-[#FF3333]">{insertCommas(User_Point)}‚Ç©</p>
          </div>

          <p>‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£</p>
          <select className='w-full rounded-md' style={{ fontFamily: "Sriracha-Regular"}} onChange={handleChange}>
            <option
              value= "ÌïòÎÇò"
            >KEB Hana Bank
            </option>
            <option
              value= "Ïö∞Î¶¨"
            >Woori Bank
            </option>
            <option
              value= "Í∏∞ÏóÖ"
            >IBKÍ∏∞ÏóÖ
            </option>
            <option
              value= "Ï†ÑÎ∂Å"
            >Jeonbuk Bank
            </option>
            <option
              value= "ÎÜçÌòë"
            >NH Bank
            </option>

            <option
              value= "Íµ≠ÎØº"
            >KooKmin bank
            </option>
            <option
              value= "Î∂ÄÏÇ∞"
            >Busan Bank
            </option>
            <option
              value= "Ïã†Ìïú"
            >Shinhan Bank
            </option>
            <option
              value= "ÌÜ†Ïä§"
            >Toss Bank
            </option>
            <option
              value= "Í¥ëÏ£º"
            >Kwangij Bank
            </option>

            <option
              value= "ÏºÄÏù¥Î±ÖÌÅ¨"
            >K-bank
            </option>
            <option
              value= "Ïã†Ìòë"
            >NCUFK
            </option>
            <option
              value= "Ïπ¥Ïπ¥Ïò§"
            >Kakao Bank
            </option>
            
		      </select>

          <label className="block">
            <input
              {...register('Name')}
              // ÏòàÍ∏àÏ£º
              placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ(‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤)"
              // defaultValue={Add["add1"]}/
              className="h-14 w-full rounded-md border border-gray-300 p-4"
            />
          </label>
          {/* <label className="block">
            <input
              {...register('BankName')}
              // ÏùÄÌñâÎ™Ö
              placeholder="‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£"
              className="h-14 w-full rounded-md border border-gray-300 p-4"
            />
          </label> */}
          
          <label className="block">
            <input
              // Í≥ÑÏ¢åÎ≤àÌò∏
              {...register('accountName')}
              placeholder="‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ"
              className="h-14 w-full rounded-md border border-gray-300 p-4"
            />
          </label>
          
          <div className="mt-3 rounded-md border-2 border-black p-3 text-[#333]  text-center " style={{ fontSize: '18px', lineHeight: '150%', fontFamily: "Sriracha-Regular" }}>
            ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏Ñ‡πà‡∏∞‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≠‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏≤‡∏Å ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Ñ‡πà‡∏∞<br/>
            ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏∞üôè<br/><br/>
            Fast Food ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô 1 ‡∏£‡∏≠‡∏ö ‡∏Ñ‡πà‡∏∞<br/><br/>
            ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô 23:00 PM ‡∏ñ‡∏∂‡∏á 24:00 PM<br/>
          </div>
          
        </div>

        <button className="h-20 w-full bg-primary text-2xl font-bold text-white" type="submit" style={{ fontFamily: "Sriracha-Regular" }}>
          {/*Íµ¨Îß§ÌïòÍ∏∞*/}
          ‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
        </button>
      </div>
    </form >
  )
}
export default Order
